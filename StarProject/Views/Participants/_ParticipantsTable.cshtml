@using Microsoft.AspNetCore.Html
@model IEnumerable<StarProject.Models.Participant>
@{
    // 由 ListByEvent 傳入
    int eventId = ViewBag.EventId ?? 0;

    // 檢查是否有資料
    bool hasRows = Model != null && Model.Any();

    // 狀態→badge
    Func<string?, IHtmlContent> badge = (s) =>
    {
        var zh = s switch
        {
            "Success" or "報名成功" => "報名成功",
            "Pending" => "待處理",
            "Canceled" or "Cancelled" => "報名取消已退款",
            _ => s ?? "未知狀態"
        };
        var cls = s switch
        {
            "Success" or "報名成功" => "badge bg-success",
            "Pending" => "badge bg-secondary",
            "Canceled" or "Cancelled" => "badge bg-danger",
            _ => "badge bg-light text-dark"
        };
        return new HtmlString($"<span class=\"{cls}\">{zh}</span>");
    };
}

<!-- 批次刪除用的隱藏表單 -->
<form id="bulkForm" style="display:none;">
    @Html.AntiForgeryToken()
</form>

<!-- 批次操作工具列 -->
<div class="d-flex align-items-center justify-content-between mb-3">
    <div class="d-flex align-items-center gap-2">
        <button type="button" id="btnBulkDelete" class="btn btn-sm btn-outline-danger">
            <i class="bi bi-trash"></i> 批次刪除
        </button>
        <small class="text-muted">請先勾選要操作的項目</small>
    </div>
    <div class="text-muted small">
        共 @(Model?.Count() ?? 0) 筆資料
    </div>
</div>

<div class="table-responsive">
    <table class="table table-bordered table-hover align-middle mb-0">
        <thead class="table-light">
            <tr>
                <th style="width:40px">
                    <input type="checkbox" id="checkAll" data-check-all />
                </th>
                <th style="width:160px">報名日期</th>
                <th style="width:160px">最後更新</th>
                <th>會員姓名</th>
                <th style="width:120px">狀態</th>
                <th style="width:200px">操作</th>
            </tr>
        </thead>
        <tbody>
            @if (!hasRows)
            {
                <tr>
                    <td colspan="6" class="text-center text-muted py-4">
                        <i class="bi bi-inbox fs-1 d-block mb-2 opacity-50"></i>
                        尚無報名紀錄
                    </td>
                </tr>
            }
            else
            {
                @foreach (var p in Model)
                {
                    <tr data-id="@p.No">
                        <td>
                            <input type="checkbox"
                                   class="row-check"
                                   name="ids"
                                   value="@p.No"
                                   data-id="@p.No" />
                        </td>
                        <td>
                            <div class="small">
                                <div>@p.RegisteredDate.ToString("yyyy-MM-dd")</div>
                                <div class="text-muted">@p.RegisteredDate.ToString("HH:mm")</div>
                            </div>
                        </td>
                        <td>
                            <div class="small">
                                <div>@p.UpdatedAt.ToString("yyyy-MM-dd")</div>
                                <div class="text-muted">@p.UpdatedAt.ToString("HH:mm")</div>
                            </div>
                        </td>
                        <td>
                            <div class="fw-medium">@(p.UsersNoNavigation?.Name ?? "未知會員")</div>
                            @if (!string.IsNullOrEmpty(p.UsersNoNavigation?.Email))
                            {
                                <div class="small text-muted">@p.UsersNoNavigation.Email</div>
                            }
                        </td>
                        <td>@badge(p.Status)</td>
                        <td>
                            <div class="btn-group" role="group">
                                <button type="button"
                                        class="btn btn-sm btn-outline-secondary js-resend-mail"
                                        data-id="@p.No"
                                        title="重新發送報名確認信">
                                    <i class="bi bi-envelope-arrow-up"></i>
                                </button>
                                <button type="button"
                                        class="btn btn-sm btn-outline-danger js-row-delete"
                                        data-id="@p.No"
                                        title="刪除此報名資料">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<script>
    (function() {
        'use strict';

        console.log('_ParticipantsTable script loaded');

        // 重寄 Mail 功能
        document.addEventListener('click', async function(e) {
            const btn = e.target.closest('.js-resend-mail');
            if (!btn) return;

            const participantId = btn.dataset.id;
            if (!participantId) {
                alert('找不到參與者ID');
                return;
            }

            // 防止重複點擊
            const originalHtml = btn.innerHTML;
            btn.disabled = true;
            btn.innerHTML = '<i class="spinner-border spinner-border-sm"></i>';

            try {
                const tokenEl = document.querySelector('#bulkForm input[name="__RequestVerificationToken"]');
                if (!tokenEl) {
                    throw new Error('找不到防偽Token');
                }

                const formData = new FormData();
                formData.append('__RequestVerificationToken', tokenEl.value);
                formData.append('id', participantId);

                const response = await fetch('/Participants/ResendSignup', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }

                const result = await response.json();

                if (result.success) {
                    // 成功提示
                    btn.innerHTML = '<i class="bi bi-check-circle text-success"></i>';
                    btn.classList.remove('btn-outline-secondary');
                    btn.classList.add('btn-success');

                    setTimeout(() => {
                        btn.innerHTML = originalHtml;
                        btn.classList.remove('btn-success');
                        btn.classList.add('btn-outline-secondary');
                        btn.disabled = false;
                    }, 3000);

                    // 可選：顯示成功提示
                    if (typeof Swal !== 'undefined') {
                        Swal.fire({
                            icon: 'success',
                            title: '發送成功',
                            text: '報名確認信已重新發送',
                            timer: 2000,
                            showConfirmButton: false
                        });
                    }
                } else {
                    throw new Error(result.message || '發送失敗');
                }

            } catch (error) {
                console.error('重寄郵件失敗:', error);
                alert('重寄郵件失敗: ' + (error.message || error));
                btn.innerHTML = originalHtml;
                btn.disabled = false;
            }
        });

        // 全選/取消全選功能
        document.addEventListener('change', function(e) {
            const target = e.target;

            // 全選 checkbox
            if (target.matches('#checkAll[data-check-all]')) {
                const isChecked = target.checked;
                const rowCheckboxes = document.querySelectorAll('input[name="ids"]');
                rowCheckboxes.forEach(cb => {
                    cb.checked = isChecked;
                });
                target.indeterminate = false;
                return;
            }

            // 單行 checkbox - 更新全選狀態
            if (target.matches('input[name="ids"]')) {
                const allCheckboxes = Array.from(document.querySelectorAll('input[name="ids"]'));
                const checkedCount = allCheckboxes.filter(cb => cb.checked).length;
                const checkAllBox = document.querySelector('#checkAll[data-check-all]');

                if (checkAllBox) {
                    if (checkedCount === 0) {
                        checkAllBox.checked = false;
                        checkAllBox.indeterminate = false;
                    } else if (checkedCount === allCheckboxes.length) {
                        checkAllBox.checked = true;
                        checkAllBox.indeterminate = false;
                    } else {
                        checkAllBox.checked = false;
                        checkAllBox.indeterminate = true;
                    }
                }
            }
        });

        console.log('_ParticipantsTable script setup complete');
    })();
</script>

<style>
    .table th {
        border-top: none;
        font-weight: 600;
        background-color: #f8f9fa !important;
    }

    .btn-group .btn {
        border-radius: 0;
    }

        .btn-group .btn:first-child {
            border-radius: 0.375rem 0 0 0.375rem;
        }

        .btn-group .btn:last-child {
            border-radius: 0 0.375rem 0.375rem 0;
        }

    .table-responsive {
        border-radius: 0.5rem;
        overflow: hidden;
        border: 1px solid #dee2e6;
    }
</style>