@using StarProject.DTOs.PromotionDTOs
@model IEnumerable<PromotionListDto>
@{
    ViewData["Title"] = "優惠券管理";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fa-solid fa-circle-check me-2"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<head>
    <link href="~/css/promotion.css" rel="stylesheet" />
</head>

<main class="flex-fill position-relative">
    <div class="d-flex align-items-center mb-3">
        <h1 class="fw-bold flex-grow-1 mb-0">優惠券列表</h1>
        <a asp-controller="Promotion" asp-action="Create" class="btn btn-search fw-bold">
            <i class="fa-solid fa-plus"></i> 新增
        </a>
    </div>

    <div class="input-group input-group-lg">
        <input id="searchInput" type="text" class="form-control" placeholder="請輸入關鍵字（名稱、代碼、類別）">
        <button type="button" class="input-group-text search" id="btnSearch">
            <i class="fa-solid fa-magnifying-glass"></i>
        </button>

        <div class="d-flex gap-3">
            <div style="width:150px">
                <!-- ✅ 修改：變更每頁筆數時重載第 1 頁 -->
                <select class="form-select form-select-lg" id="pageSizeSelect" onchange="loadData(1)">
                    <option selected value="10">每頁10筆</option>
                    <option value="15">每頁15筆</option>
                    <option value="20">每頁20筆</option>
                    <option value="25">每頁25筆</option>
                </select>
            </div>
        </div>
    </div>

    <div class="table-rounded position-relative mt-3">
        <table class="table table-hover table-borderless">
            <thead>
                <tr>
                    <th>編號</th>
                    <th>優惠名稱</th>
                    <th>優惠代碼</th>
                    <th>類別</th>
                    <th>開始日期</th>
                    <th>結束日期</th>
                    <th>狀態</th>
                    <th style="width:116px"></th>
                </tr>
            </thead>
            <tbody id="tableBody"><!-- ✅ 首屏不渲染資料，由 JS 載入 --></tbody>
        </table>

        <!-- ✅ 修改：改用你的 _PromotionPagination partial 的輸出容器 -->
        <div id="paginationContainer" class="mt-3"></div>
        <!-- 🔎 原本是 nav > ul#pagination，為避免重複包 nav，改成單一容器由 partial 直接填入 -->
    </div>
</main>

@section Scripts {
    <script>
        // 成功訊息 5 秒後自動消失
        document.addEventListener('DOMContentLoaded', function() {
            var alertElement = document.querySelector('.alert-success');
            if (alertElement) {
                setTimeout(function() {
                    var bsAlert = new bootstrap.Alert(alertElement);
                    bsAlert.close();
                }, 5000);
            }
        });
        
        async function loadData(page) {
            const pageSize = document.getElementById("pageSizeSelect").value;
            const search = document.getElementById("searchInput").value;

            const qs = new URLSearchParams({ page, pageSize, search });
            const res = await fetch(`/Promotion/GetPagedData?${qs.toString()}`);
            if (!res.ok) {
                console.error("Fetch failed", res.status);
                return;
            }
            const result = await res.json();

            // ✅ 套用資料列
            document.getElementById("tableBody").innerHTML = result.rows;
            // ✅ 改為把 server render 的 _PromotionPagination 填入這個容器
            document.getElementById("paginationContainer").innerHTML = result.pagination;
        }

        // ✅ _PromotionPagination 會呼叫這個函式名稱
        function refreshTable(page) {
            loadData(page);
        }

        document.getElementById("btnSearch").addEventListener("click", () => loadData(1));
        document.addEventListener("DOMContentLoaded", () => loadData(1));
    </script>
}