@model StarProject.Models.Participant
@{
	ViewData["Title"] = "新增報名";
}

<style>
	.card-header {
		background-color: #2B4C8C !important;
		color: #fff !important;
	}

	.card-header * {
		color: inherit;
	}
</style>

<h1 class="fw-bold">快速新增報名</h1>
<hr />

<div class="row">
	<div class="d-flex">
		<form asp-action="Create" method="post" class="w-100">
			@Html.AntiForgeryToken()
			<div asp-validation-summary="All" class="text-danger"></div>

			<div class="row g-4">
				<!-- 單欄（左側） -->
				<div class="col-8 col-lg-8">
					<!-- 需要更寬可改成 col-lg-12 -->
					<div class="card">
						<div class="card-header card-header"><strong>報名資訊</strong></div>
						<div class="card-body">
							<!-- 活動 -->
							<div class="mb-3">
								<label asp-for="EventNo" class="control-label fw-bold fs-6">活動</label>
								<select asp-for="EventNo" class="form-select" asp-items="ViewBag.EventNo" required id="EventNo">
									<option value="">僅「報名中」的活動可供選取</option>
								</select>
								<span asp-validation-for="EventNo" class="text-danger"></span>
							</div>

							<!-- 會員：置於活動下方 -->
							<div class="mb-3">
								<label asp-for="UsersNo" class="control-label fw-bold fs-6">會員</label>
								<select asp-for="UsersNo" class="form-select" asp-items="ViewBag.UsersNo" required id="UsersNo">
									<option value="">請選擇會員</option>
								</select>
								<span asp-validation-for="UsersNo" class="text-danger"></span>
							</div>

							<!-- 狀態 -->
							<div class="mb-3">
								<label asp-for="Status" class="control-label fw-bold fs-6">狀態</label>
								<select asp-for="Status" class="form-select" required id="Status">
									<option value="報名成功">報名成功</option>
									<option value="報名取消已退款">報名取消已退款</option>
								</select>
								<span asp-validation-for="Status" class="text-danger"></span>
							</div>

							<!-- 重複報名警示 -->
							<div id="dupWarn" class="alert alert-danger d-none" role="alert" aria-live="assertive">
								<strong>重複報名！</strong> 此會員已報名該活動（狀態：報名成功），請勿重複建立。
							</div>
						</div>

						<!-- 置中按鈕 -->
						<div class="card-footer text-center py-3">
							<div class="d-inline-flex gap-2">
								<button id="submitBtn" type="submit" class="btn btn-primary js-submit"
										onclick="this.disabled=true; this.innerText='建立中…'; this.form.submit();">
									建立
								</button>
								<a asp-action="Index" class="btn btn-secondary">返回列表</a>
							</div>
						</div>
					</div>
				</div>
				<!-- /單欄 -->
			</div>
		</form>
	</div>
</div>

@section Scripts {
	@await Html.PartialAsync("_ValidationScriptsPartial")

	<style>
		/* 按鈕抖動動畫（避免動到整頁） */
		@@keyframes shake {
			10%, 90% {
				transform: translateX(-1px);
			}

			20%, 80% {
				transform: translateX( 2px);
			}

			30%, 50%, 70% {
				transform: translateX(-4px);
			}

			40%, 60% {
				transform: translateX( 4px);
			}
		}

		.js-submit.shake {
			animation: shake 0.5s ease both;
		}

		@@media (prefers-reduced-motion: reduce) {
			.js-submit.shake {
				animation: none;
			}
		}
	</style>

	<script>
		(function () {
			// 重複報名偵測
			const elEvent = document.getElementById('EventNo');
			const elUser  = document.getElementById('UsersNo');
			const dupWarn = document.getElementById('dupWarn');
			const submitButtons = Array.from(document.querySelectorAll('.js-submit'));

			function setSubmitEnabled(enabled) { submitButtons.forEach(btn => btn.disabled = !enabled); }
			function shakeButtons() {
				submitButtons.forEach(btn => {
					btn.classList.add('shake');
					setTimeout(() => btn.classList.remove('shake'), 600);
				});
			}
			function showDuplicateUI(isDup) {
				if (isDup) { dupWarn.classList.remove('d-none'); setSubmitEnabled(false); shakeButtons(); }
				else { dupWarn.classList.add('d-none'); setSubmitEnabled(true); }
			}

			async function checkDuplicate() {
				showDuplicateUI(false);
				const eventId = elEvent?.value;
				const usersNo = elUser ?.value;
				if (!eventId || !usersNo) return;

				try {
					const url = `/Participants/CheckDuplicate?eventId=${encodeURIComponent(eventId)}&usersNo=${encodeURIComponent(usersNo)}`;
					const resp = await fetch(url, { method: 'GET' });
					const data = await resp.json();
					if (data && data.exists) showDuplicateUI(true);
				} catch { /* 靜默失敗：不阻擋提交 */ }
			}

			elEvent?.addEventListener('change', checkDuplicate);
			elUser ?.addEventListener('change',  checkDuplicate);
			checkDuplicate(); // 初次載入
		})();
	</script>
}
