// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarProject.Models;

#nullable disable

namespace StarProject.Migrations
{
    [DbContext(typeof(StarProjectContext))]
    [Migration("20250911083252_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StarProject.Models.AuditLog", b =>
                {
                    b.Property<long>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("No"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ActionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Emp_No");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordId")
                        .HasColumnType("int")
                        .HasColumnName("RecordID");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("No");

                    b.HasIndex("EmpNo");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("StarProject.Models.Cart", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<decimal>("AllTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CouponCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("UpdatedAtTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UserNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_No");

                    b.HasKey("No");

                    b.HasIndex("UserNo");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("CartNo")
                        .HasColumnType("int")
                        .HasColumnName("Cart_No");

                    b.Property<string>("CouponCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("ProductNo")
                        .HasColumnType("int")
                        .HasColumnName("Product_No");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartNo");

                    b.HasIndex("ProductNo");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Collection", b =>
                {
                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("EventNo")
                        .HasColumnType("int")
                        .HasColumnName("Event_No");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KnowledgeNo")
                        .HasColumnType("int")
                        .HasColumnName("Knowledge_No");

                    b.Property<int?>("ProductNo")
                        .HasColumnType("int")
                        .HasColumnName("Product_No");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_No");

                    b.HasIndex("EventNo");

                    b.HasIndex("KnowledgeNo");

                    b.HasIndex("ProductNo");

                    b.HasIndex("UserNo");

                    b.ToTable("Collection", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.CustomerService", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Emp_No");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_No");

                    b.HasKey("No");

                    b.HasIndex("EmpNo");

                    b.HasIndex("UserNo");

                    b.ToTable("CustomerService", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Dept", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("DeptDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("No");

                    b.HasIndex(new[] { "DeptCode" }, "UQ_Dept_DeptCode")
                        .IsUnique();

                    b.HasIndex(new[] { "DeptName" }, "UQ_Dept_DeptName")
                        .IsUnique();

                    b.ToTable("Dept", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Emp", b =>
                {
                    b.Property<string>("No")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeptNo")
                        .HasColumnType("int")
                        .HasColumnName("Dept_No");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ForceChangePassword")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleNo")
                        .HasColumnType("int")
                        .HasColumnName("Role_No");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("No");

                    b.HasIndex("DeptNo");

                    b.HasIndex("RoleNo");

                    b.HasIndex(new[] { "EmpCode" }, "UQ_Emps_EmpCode")
                        .IsUnique();

                    b.ToTable("Emps");
                });

            modelBuilder.Entity("StarProject.Models.Event", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Deposit")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Fee")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedTime")
                        .HasColumnType("datetime");

                    b.HasKey("No")
                        .HasName("PK_event");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.EventNotif", b =>
                {
                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EventNo")
                        .HasColumnType("int")
                        .HasColumnName("Event_No");

                    b.Property<int>("ParticipantNo")
                        .HasColumnType("int")
                        .HasColumnName("Participant_No");

                    b.Property<DateTime>("Senttime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasIndex("EventNo");

                    b.HasIndex("ParticipantNo");

                    b.ToTable("EventNotif", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Faq", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryNo")
                        .HasColumnType("int")
                        .HasColumnName("Category_No");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("No");

                    b.HasIndex("CategoryNo");

                    b.ToTable("FAQ", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Faqcategory", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("No");

                    b.ToTable("FAQCategory", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Faqkeyword", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<int>("FaqNo")
                        .HasColumnType("int")
                        .HasColumnName("FAQ_No");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("No");

                    b.HasIndex("FaqNo");

                    b.ToTable("FAQKeyword", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Knowledge", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Like")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("No");

                    b.ToTable("Knowledge", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.KnowledgeContent", b =>
                {
                    b.Property<string>("BlockType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KnowledgeNo")
                        .HasColumnType("int")
                        .HasColumnName("Knowledge_No");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.HasIndex("KnowledgeNo");

                    b.ToTable("KnowledgeContent", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.LoginLog", b =>
                {
                    b.Property<long>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("No"));

                    b.Property<string>("DeviceInfo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ipaddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("IPAddress");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("UserNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_No");

                    b.HasKey("No");

                    b.HasIndex("UserNo");

                    b.ToTable("LoginLogs");
                });

            modelBuilder.Entity("StarProject.Models.LostInfo", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FoundDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OwnerPhone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("No");

                    b.ToTable("LostInfo", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.News", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("No");

                    b.ToTable("News");
                });

            modelBuilder.Entity("StarProject.Models.OrderC", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Emp_No");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Order_No");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReplyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_No");

                    b.HasKey("No")
                        .HasName("PK_OrderCS_1");

                    b.HasIndex("EmpNo");

                    b.HasIndex("OrderNo");

                    b.HasIndex("UserNo");

                    b.ToTable("OrderCS", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.OrderDelivery", b =>
                {
                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Order_No");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_No");

                    b.HasIndex("OrderNo");

                    b.HasIndex("UserNo");

                    b.ToTable("OrderDelivery", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.OrderItem", b =>
                {
                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CouponCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("DiscountType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Order_No");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasIndex("OrderNo");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.OrderMaster", b =>
                {
                    b.Property<string>("No")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("AllTotal")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CouponCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Deliveryfee")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Deliveryway")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("DiscountType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MerchantTradeNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("UserNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_No");

                    b.HasKey("No")
                        .HasName("PK__Order__3214D4A8D66B9260");

                    b.HasIndex("UserNo");

                    b.ToTable("OrderMaster", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.OrderStatus", b =>
                {
                    b.Property<string>("EmpNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Emp_No");

                    b.Property<string>("Motion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Order_No");

                    b.Property<DateTime>("Update")
                        .HasColumnType("datetime");

                    b.HasIndex("EmpNo");

                    b.HasIndex("OrderNo");

                    b.ToTable("OrderStatus", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Participant", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("EventNo")
                        .HasColumnType("int")
                        .HasColumnName("Event_No");

                    b.Property<int>("PaymentNo")
                        .HasColumnType("int")
                        .HasColumnName("Payment_No");

                    b.Property<DateTime>("RegisterdDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UsersNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Users_No");

                    b.HasKey("No");

                    b.HasIndex("EventNo");

                    b.HasIndex("PaymentNo");

                    b.HasIndex("UsersNo");

                    b.ToTable("Participant", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.PaymentTransaction", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MerchantTradeNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("PaidTime")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentProvider")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PaymentWay")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ProviderTransId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ProviderTransID");

                    b.Property<string>("RawResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SourceID");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("PENDING");

                    b.HasKey("No")
                        .HasName("PK__PaymentT__3214EC27F6F5A3F0");

                    b.HasIndex(new[] { "MerchantTradeNo" }, "UQ__PaymentT__D6311911D4524583")
                        .IsUnique();

                    b.ToTable("PaymentTransaction", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.ProCategory", b =>
                {
                    b.Property<string>("No")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("No")
                        .HasName("PK__ProCateg__3214D4A860C92A06");

                    b.ToTable("ProCategory", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Product", b =>
                {
                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("ProCategoryNo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("ProCategory_No");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("No")
                        .HasName("PK__Product__3214D4A837C62CC8");

                    b.HasIndex("ProCategoryNo");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.ProductEdit", b =>
                {
                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Emp_No");

                    b.Property<string>("Motion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("motion");

                    b.Property<int>("ProductNo")
                        .HasColumnType("int")
                        .HasColumnName("Product_No");

                    b.Property<DateTime>("Update")
                        .HasColumnType("datetime");

                    b.HasIndex("EmpNo");

                    b.HasIndex("ProductNo");

                    b.ToTable("ProductEdit", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.ProductImage", b =>
                {
                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImgOrder")
                        .HasColumnType("int");

                    b.Property<int>("ProductNo")
                        .HasColumnType("int")
                        .HasColumnName("Product_No");

                    b.HasIndex("ProductNo");

                    b.ToTable("ProductImage", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.ProductIntroduce", b =>
                {
                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Point")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductNo")
                        .HasColumnType("int")
                        .HasColumnName("Product_No");

                    b.HasIndex("ProductNo");

                    b.ToTable("ProductIntroduce", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.ProductReply", b =>
                {
                    b.Property<int>("ProductNo")
                        .HasColumnType("int")
                        .HasColumnName("Product_No");

                    b.Property<decimal>("Ratings")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("Reply")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_No");

                    b.HasIndex("ProductNo");

                    b.HasIndex("UserNo");

                    b.ToTable("ProductReply", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.ProductStock", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductNo")
                        .HasColumnType("int")
                        .HasColumnName("Product_No");

                    b.Property<int>("TransQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasIndex("ProductNo");

                    b.ToTable("ProductStock", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Promotion", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CouponCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Limit")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Reuse")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UsesTime")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("No")
                        .HasName("PK_Promotion_PromotionNo");

                    b.HasIndex(new[] { "CouponCode" }, "UK_Promotion_CouponCode")
                        .IsUnique();

                    b.ToTable("Promotion", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.PromotionRule", b =>
                {
                    b.Property<string>("Action")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PromotionNo")
                        .HasColumnType("int")
                        .HasColumnName("Promotion_No");

                    b.Property<string>("Rule")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Scope")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasIndex("PromotionNo");

                    b.ToTable("PromotionRule", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.PromotionUsage", b =>
                {
                    b.Property<int>("PromotionNo")
                        .HasColumnType("int")
                        .HasColumnName("Promotion_No");

                    b.Property<DateTime>("UsedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_No");

                    b.HasIndex("PromotionNo");

                    b.HasIndex("UserNo");

                    b.ToTable("PromotionUsage", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Role", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("No");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("StarProject.Models.Schedule", b =>
                {
                    b.Property<int>("EventNo")
                        .HasColumnType("int")
                        .HasColumnName("Event_No");

                    b.Property<bool?>("Executed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime");

                    b.HasIndex("EventNo");

                    b.ToTable("Schedule", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.StarMap", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal>("MapLatitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<decimal>("MapLongitude")
                        .HasColumnType("decimal(9, 6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("No");

                    b.ToTable("StarMap", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.TicCategory", b =>
                {
                    b.Property<string>("No")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("No")
                        .HasName("PK__TicCateg__3214D4A80970CBCD");

                    b.ToTable("TicCategory", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.Ticket", b =>
                {
                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TicCategoryNo")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("TicCategory_No");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("No")
                        .HasName("PK__Ticket__3214D4A8DAF4E467");

                    b.HasIndex("TicCategoryNo");

                    b.ToTable("Ticket", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.TicketStock", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("TicketNo")
                        .HasColumnType("int")
                        .HasColumnName("Ticket_No");

                    b.HasIndex("TicketNo");

                    b.ToTable("TicketStock", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.User", b =>
                {
                    b.Property<string>("No")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordSalt")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("No");

                    b.HasIndex(new[] { "Account" }, "UK_Users_Account")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UK_Users_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "IdNumber" }, "UK_Users_IdNumber")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "UK_Users_Phone")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StarProject.Models.UserAchievement", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<DateTime>("AchievedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("AchievedLevel")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_No");

                    b.HasKey("No");

                    b.HasIndex("UserNo");

                    b.ToTable("UserAchievements");
                });

            modelBuilder.Entity("StarProject.Models.UserSecurity", b =>
                {
                    b.Property<int>("LastPasswordChange")
                        .HasColumnType("int");

                    b.Property<string>("TwoFaenabled")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TwoFAEnabled");

                    b.Property<string>("TwoFasecret")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TwoFASecret");

                    b.Property<string>("UserNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_No");

                    b.HasIndex("UserNo");

                    b.ToTable("UserSecurity", (string)null);
                });

            modelBuilder.Entity("StarProject.Models.AuditLog", b =>
                {
                    b.HasOne("StarProject.Models.Emp", "EmpNoNavigation")
                        .WithMany("AuditLogs")
                        .HasForeignKey("EmpNo")
                        .IsRequired()
                        .HasConstraintName("FK_AuditLogs_Emps");

                    b.Navigation("EmpNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.Cart", b =>
                {
                    b.HasOne("StarProject.Models.User", "UserNoNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("UserNo")
                        .IsRequired()
                        .HasConstraintName("FK_Cart_Users");

                    b.Navigation("UserNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.CartItem", b =>
                {
                    b.HasOne("StarProject.Models.Cart", "CartNoNavigation")
                        .WithMany("CartItems")
                        .HasForeignKey("CartNo")
                        .IsRequired()
                        .HasConstraintName("FK_CartItem_Cart");

                    b.HasOne("StarProject.Models.Product", "ProductNoNavigation")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductNo")
                        .IsRequired()
                        .HasConstraintName("FK_CartItem_Product");

                    b.Navigation("CartNoNavigation");

                    b.Navigation("ProductNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.Collection", b =>
                {
                    b.HasOne("StarProject.Models.Event", "EventNoNavigation")
                        .WithMany()
                        .HasForeignKey("EventNo")
                        .HasConstraintName("FK_Collection_Event");

                    b.HasOne("StarProject.Models.Knowledge", "KnowledgeNoNavigation")
                        .WithMany()
                        .HasForeignKey("KnowledgeNo")
                        .HasConstraintName("FK_Collection_Knowledge");

                    b.HasOne("StarProject.Models.Product", "ProductNoNavigation")
                        .WithMany()
                        .HasForeignKey("ProductNo")
                        .HasConstraintName("FK_Collection_Product");

                    b.HasOne("StarProject.Models.User", "UserNoNavigation")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .IsRequired()
                        .HasConstraintName("FK_Collection_Users");

                    b.Navigation("EventNoNavigation");

                    b.Navigation("KnowledgeNoNavigation");

                    b.Navigation("ProductNoNavigation");

                    b.Navigation("UserNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.CustomerService", b =>
                {
                    b.HasOne("StarProject.Models.Emp", "EmpNoNavigation")
                        .WithMany("CustomerServices")
                        .HasForeignKey("EmpNo")
                        .HasConstraintName("FK_CustomerService_Emps");

                    b.HasOne("StarProject.Models.User", "UserNoNavigation")
                        .WithMany("CustomerServices")
                        .HasForeignKey("UserNo")
                        .IsRequired()
                        .HasConstraintName("FK_CustomerService_Users");

                    b.Navigation("EmpNoNavigation");

                    b.Navigation("UserNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.Emp", b =>
                {
                    b.HasOne("StarProject.Models.Dept", "DeptNoNavigation")
                        .WithMany("Emps")
                        .HasForeignKey("DeptNo")
                        .IsRequired()
                        .HasConstraintName("FK_Emps_Emps");

                    b.HasOne("StarProject.Models.Role", "RoleNoNavigation")
                        .WithMany("Emps")
                        .HasForeignKey("RoleNo")
                        .IsRequired()
                        .HasConstraintName("FK_Emps_Roles");

                    b.Navigation("DeptNoNavigation");

                    b.Navigation("RoleNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.EventNotif", b =>
                {
                    b.HasOne("StarProject.Models.Event", "EventNoNavigation")
                        .WithMany()
                        .HasForeignKey("EventNo")
                        .IsRequired()
                        .HasConstraintName("FK_eventNotif_event");

                    b.HasOne("StarProject.Models.Participant", "ParticipantNoNavigation")
                        .WithMany()
                        .HasForeignKey("ParticipantNo")
                        .IsRequired()
                        .HasConstraintName("FK_EventNotif_Participant");

                    b.Navigation("EventNoNavigation");

                    b.Navigation("ParticipantNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.Faq", b =>
                {
                    b.HasOne("StarProject.Models.Faqcategory", "CategoryNoNavigation")
                        .WithMany("Faqs")
                        .HasForeignKey("CategoryNo")
                        .IsRequired()
                        .HasConstraintName("FK_FAQ_FAQCategory");

                    b.Navigation("CategoryNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.Faqkeyword", b =>
                {
                    b.HasOne("StarProject.Models.Faq", "FaqNoNavigation")
                        .WithMany("Faqkeywords")
                        .HasForeignKey("FaqNo")
                        .IsRequired()
                        .HasConstraintName("FK_FAQKeyword_FAQ");

                    b.Navigation("FaqNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.KnowledgeContent", b =>
                {
                    b.HasOne("StarProject.Models.Knowledge", "KnowledgeNoNavigation")
                        .WithMany()
                        .HasForeignKey("KnowledgeNo")
                        .IsRequired()
                        .HasConstraintName("FK_KnowledgeContent_Knowledge");

                    b.Navigation("KnowledgeNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.LoginLog", b =>
                {
                    b.HasOne("StarProject.Models.User", "UserNoNavigation")
                        .WithMany("LoginLogs")
                        .HasForeignKey("UserNo")
                        .IsRequired()
                        .HasConstraintName("FK_LoginLogs_Users");

                    b.Navigation("UserNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.OrderC", b =>
                {
                    b.HasOne("StarProject.Models.Emp", "EmpNoNavigation")
                        .WithMany("OrderCs")
                        .HasForeignKey("EmpNo")
                        .HasConstraintName("FK_OrderCS_Emps");

                    b.HasOne("StarProject.Models.OrderMaster", "OrderNoNavigation")
                        .WithMany("OrderCs")
                        .HasForeignKey("OrderNo")
                        .IsRequired()
                        .HasConstraintName("FK_OrderCS_Order");

                    b.HasOne("StarProject.Models.User", "UserNoNavigation")
                        .WithMany("OrderCs")
                        .HasForeignKey("UserNo")
                        .IsRequired()
                        .HasConstraintName("FK_OrderCS_Users");

                    b.Navigation("EmpNoNavigation");

                    b.Navigation("OrderNoNavigation");

                    b.Navigation("UserNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.OrderDelivery", b =>
                {
                    b.HasOne("StarProject.Models.OrderMaster", "OrderNoNavigation")
                        .WithMany()
                        .HasForeignKey("OrderNo")
                        .IsRequired()
                        .HasConstraintName("FK_OrderDelivery_OrderMaster");

                    b.HasOne("StarProject.Models.User", "UserNoNavigation")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .IsRequired()
                        .HasConstraintName("FK_OrderDelivery_Users");

                    b.Navigation("OrderNoNavigation");

                    b.Navigation("UserNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.OrderItem", b =>
                {
                    b.HasOne("StarProject.Models.OrderMaster", "OrderNoNavigation")
                        .WithMany()
                        .HasForeignKey("OrderNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderItem_Order");

                    b.Navigation("OrderNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.OrderMaster", b =>
                {
                    b.HasOne("StarProject.Models.User", "UserNoNavigation")
                        .WithMany("OrderMasters")
                        .HasForeignKey("UserNo")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Users");

                    b.Navigation("UserNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.OrderStatus", b =>
                {
                    b.HasOne("StarProject.Models.Emp", "EmpNoNavigation")
                        .WithMany()
                        .HasForeignKey("EmpNo")
                        .HasConstraintName("FK_OrderStatus_Emps");

                    b.HasOne("StarProject.Models.OrderMaster", "OrderNoNavigation")
                        .WithMany()
                        .HasForeignKey("OrderNo")
                        .IsRequired()
                        .HasConstraintName("FK_OrderEdit_Order");

                    b.Navigation("EmpNoNavigation");

                    b.Navigation("OrderNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.Participant", b =>
                {
                    b.HasOne("StarProject.Models.Event", "EventNoNavigation")
                        .WithMany("Participants")
                        .HasForeignKey("EventNo")
                        .IsRequired()
                        .HasConstraintName("FK_Participant_Event");

                    b.HasOne("StarProject.Models.PaymentTransaction", "PaymentNoNavigation")
                        .WithMany("Participants")
                        .HasForeignKey("PaymentNo")
                        .IsRequired()
                        .HasConstraintName("FK_Participant_PaymentTransaction");

                    b.HasOne("StarProject.Models.User", "UsersNoNavigation")
                        .WithMany("Participants")
                        .HasForeignKey("UsersNo")
                        .IsRequired()
                        .HasConstraintName("FK_Participant_Users");

                    b.Navigation("EventNoNavigation");

                    b.Navigation("PaymentNoNavigation");

                    b.Navigation("UsersNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.Product", b =>
                {
                    b.HasOne("StarProject.Models.ProCategory", "ProCategoryNoNavigation")
                        .WithMany("Products")
                        .HasForeignKey("ProCategoryNo")
                        .IsRequired()
                        .HasConstraintName("FK_Product_ProCategory");

                    b.Navigation("ProCategoryNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.ProductEdit", b =>
                {
                    b.HasOne("StarProject.Models.Emp", "EmpNoNavigation")
                        .WithMany()
                        .HasForeignKey("EmpNo")
                        .IsRequired()
                        .HasConstraintName("FK_ProductEdit_Emps");

                    b.HasOne("StarProject.Models.Product", "ProductNoNavigation")
                        .WithMany()
                        .HasForeignKey("ProductNo")
                        .IsRequired()
                        .HasConstraintName("FK_ProductEdit_Product");

                    b.Navigation("EmpNoNavigation");

                    b.Navigation("ProductNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.ProductImage", b =>
                {
                    b.HasOne("StarProject.Models.Product", "ProductNoNavigation")
                        .WithMany()
                        .HasForeignKey("ProductNo")
                        .IsRequired()
                        .HasConstraintName("Img_ProNo_FK");

                    b.Navigation("ProductNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.ProductIntroduce", b =>
                {
                    b.HasOne("StarProject.Models.Product", "ProductNoNavigation")
                        .WithMany()
                        .HasForeignKey("ProductNo")
                        .IsRequired()
                        .HasConstraintName("Intro_ProNo_FK");

                    b.Navigation("ProductNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.ProductReply", b =>
                {
                    b.HasOne("StarProject.Models.Product", "ProductNoNavigation")
                        .WithMany()
                        .HasForeignKey("ProductNo")
                        .IsRequired()
                        .HasConstraintName("ProRe_ProNo_FK");

                    b.HasOne("StarProject.Models.User", "UserNoNavigation")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .IsRequired()
                        .HasConstraintName("ProRe_UserNo_FK");

                    b.Navigation("ProductNoNavigation");

                    b.Navigation("UserNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.ProductStock", b =>
                {
                    b.HasOne("StarProject.Models.Product", "ProductNoNavigation")
                        .WithMany()
                        .HasForeignKey("ProductNo")
                        .IsRequired()
                        .HasConstraintName("FK_ProductStock_ProductNo");

                    b.Navigation("ProductNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.PromotionRule", b =>
                {
                    b.HasOne("StarProject.Models.Promotion", "PromotionNoNavigation")
                        .WithMany()
                        .HasForeignKey("PromotionNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PromotionRule_PromotionNo");

                    b.Navigation("PromotionNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.PromotionUsage", b =>
                {
                    b.HasOne("StarProject.Models.Promotion", "PromotionNoNavigation")
                        .WithMany()
                        .HasForeignKey("PromotionNo")
                        .IsRequired()
                        .HasConstraintName("FK_PromotionUsage_Promotion");

                    b.HasOne("StarProject.Models.User", "UserNoNavigation")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .IsRequired()
                        .HasConstraintName("FK_PromotionUsage_Users");

                    b.Navigation("PromotionNoNavigation");

                    b.Navigation("UserNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.Schedule", b =>
                {
                    b.HasOne("StarProject.Models.Event", "EventNoNavigation")
                        .WithMany()
                        .HasForeignKey("EventNo")
                        .IsRequired()
                        .HasConstraintName("FK_Schedule_event");

                    b.Navigation("EventNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.Ticket", b =>
                {
                    b.HasOne("StarProject.Models.TicCategory", "TicCategoryNoNavigation")
                        .WithMany("Tickets")
                        .HasForeignKey("TicCategoryNo")
                        .IsRequired()
                        .HasConstraintName("FK_Ticket_TicCategory");

                    b.Navigation("TicCategoryNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.TicketStock", b =>
                {
                    b.HasOne("StarProject.Models.Ticket", "TicketNoNavigation")
                        .WithMany()
                        .HasForeignKey("TicketNo")
                        .IsRequired()
                        .HasConstraintName("Tic_No_FK");

                    b.Navigation("TicketNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.UserAchievement", b =>
                {
                    b.HasOne("StarProject.Models.User", "UserNoNavigation")
                        .WithMany("UserAchievements")
                        .HasForeignKey("UserNo")
                        .IsRequired()
                        .HasConstraintName("FK_UserAchievements_Users");

                    b.Navigation("UserNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.UserSecurity", b =>
                {
                    b.HasOne("StarProject.Models.User", "UserNoNavigation")
                        .WithMany()
                        .HasForeignKey("UserNo")
                        .IsRequired()
                        .HasConstraintName("FK_UserSecurity_Users");

                    b.Navigation("UserNoNavigation");
                });

            modelBuilder.Entity("StarProject.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("StarProject.Models.Dept", b =>
                {
                    b.Navigation("Emps");
                });

            modelBuilder.Entity("StarProject.Models.Emp", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("CustomerServices");

                    b.Navigation("OrderCs");
                });

            modelBuilder.Entity("StarProject.Models.Event", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("StarProject.Models.Faq", b =>
                {
                    b.Navigation("Faqkeywords");
                });

            modelBuilder.Entity("StarProject.Models.Faqcategory", b =>
                {
                    b.Navigation("Faqs");
                });

            modelBuilder.Entity("StarProject.Models.OrderMaster", b =>
                {
                    b.Navigation("OrderCs");
                });

            modelBuilder.Entity("StarProject.Models.PaymentTransaction", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("StarProject.Models.ProCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("StarProject.Models.Product", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("StarProject.Models.Role", b =>
                {
                    b.Navigation("Emps");
                });

            modelBuilder.Entity("StarProject.Models.TicCategory", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("StarProject.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("CustomerServices");

                    b.Navigation("LoginLogs");

                    b.Navigation("OrderCs");

                    b.Navigation("OrderMasters");

                    b.Navigation("Participants");

                    b.Navigation("UserAchievements");
                });
#pragma warning restore 612, 618
        }
    }
}
